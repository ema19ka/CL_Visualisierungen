const url = 'https://info.gesundheitsministerium.at/data/Epikurve.csv';
const corsFix = 'https://cors-anywhere.herokuapp.com/';

let accessBool = true; //checkt of ampelfile online geladen werden soll, wenn true = AN
let pathbool;

let path2 = corsFix + url;

//MainCode
function yourMainCode(remoteData) {
 const stringReplace = JSON.stringify(remoteData);
 const jsonReplace = replaceUmlauts(stringReplace);
 const realData = JSON.parse(jsonReplace);
  let items_json = realData;
      var date = new Date();//var updateDate = date.toISOString(); //"2011-12-19T15:28:46.493Z"
      var updateDate = date.toGMTString(); // Tue, 17 Nov 2020 14:16:29 GMT --> Gibt mir die jetzige Uhrzeit im Format das lastModiefied Header Request auch hat
      var ampelDatatrue = { updateDate: updateDate, items_json };
      localStorage.setItem("Data", JSON.stringify(ampelDatatrue));
}

//Speichern der AMPELDaten im LocalStorage + Hinzufügen der Zeit und Datum des Downloads
function downloadAmpelFile(path2) {
    if(pathbool==true){ 
      Papa.parse(path2, {
        download: true,
        header: true,
        complete: function (results, file) {
            console.log('Completed loading the file...');
             // Here starts your real code with this function
            yourMainCode(results.data);   
        },
      });//wenn ich internet hab und auf die Ampedaten zugreifen darf dann..
  }else{ 
    pathbool=false; //verweiere zugriff auf ampeldaten online auch wenn ich internet hab
  }
  }

  function read_from_local_storage() { //gib mir die Datem aus dem localStorage
    //DATEN
  
    var items_json = localStorage.getItem("Data");
  
    if(items_json !=null){ //check of es diese Daten im localstorage gibt
      accessBool = false; 
    items = JSON.parse(items_json);
    items2 = JSON.stringify(items_json);
    dataOffline = items.items_json;
    //dataOffline = items.items_json.Warnstufen.length;
  
    var savedDate = localStorage.getItem("Data");
    savedDateValue = JSON.parse(savedDate);
    getSavedDate = savedDateValue.updateDate;

    //console.log('Zuletzt im localStorage gespeichert am:',getSavedDate);
    /*if (!items) {
      items = [];
    }*/
  } else{
    accessBool = true; //Wenn es die Daten nicht gibt dann starte den zugriff auf die online-Daten 
    pathbool = true; 
    downloadAmpelFile(path2);
  }
  }

function replaceUmlauts(value){
       value = value.replace(/\u00e4/g, 'ae');
       value = value.replace(/\u00f6/g, 'oe');
       value = value.replace(/\u00fc/g, 'ue');
       value = value.replace(/\u00c4/g, 'Ae');
       value = value.replace(/\u00d6/g, 'Oe');
       value = value.replace(/\u00dc/g, 'Ue');
       return value;
}
  
function checkForUpdate() {
    read_from_local_storage(); //Les mir das Objekte vom Lokalstorage aus (brauche "updateDate", "lokalstorageBezirk" )
    try{
    console.log('Speicherdatum vom local storage:', getSavedDate);
    }catch(error){
    console.log(error);
  }  
  //schau ob die lokalen Ampel  Speicherdaten geupdated gehören
  if(accessBool == true){ //wenn der online zugriff auf die Ampeldaten gestattet dann
    var client = new XMLHttpRequest(); //mach eine Verbindung zur Resource
    try{
    client.open("GET", path2, true);
    client.send();
     client.onreadystatechange = function () {
      
      if (this.readyState == this.HEADERS_RECEIVED) {//gibt mir alle Headers von allen Requests aus
              var lastModifiedResponse = client.getResponseHeader("Last-Modified");
        var contentTypeResponse = client.getResponseHeader("Content-Type");
        if (contentTypeResponse != "application/json") {
          client.abort();
        } else {
          //Wenn es sich um eine JSOn Datei handelt dann gib mir den Last-Modified Header der Web Resource
          console.log("Zuletzt am Server gspeichert am (Last-Modified):",lastModifiedResponse
          );
  
          if (lastModifiedResponse < getSavedDate) {
            //Wenn der das Speicherdatum der Datei(Lastmodified) älter ist als das letzte Speicherdatum im lokal Storage dann ist es am neusten Stand
            console.log('your Data is up-to-date');
            pathbool = false;
            /*FRAGE: 
               Datum im Lokal Storage ist doch größer, als Speicherdatum der JSOn Datei. Warum ist es nicht "up - to - date"???
               */
          } else {
            pathbool = true; 
            console.log(
              "your Data is not up-to-date, it gets now downloaded from the resource and saved in your local storage"
           );
           downloadAmpelFile(path2);
          }
        }
      }
    };
    }catch(error){
      console.error(error);
      }
    }
    pathbool = false; 
  }
  
  function getData(data) {
    path2 = dataOffline;
    data = dataOffline;
    console.log("Offline Data", dataOffline);

    /*
    for (i = 0; i < dataOffline.length; i++) {
        console.log(dataOffline[i].time);
        
        }*/
}
read_from_local_storage();
console.log("Pathbool: "+ pathbool);
console.log("Accessbool: "+ accessBool);

checkForUpdate();
getData(dataOffline);
